name: test-boot
description: 'Process test bootstrap build by OW (for test compatibility)'
inputs:
  ow_version:
    description: 'OW version'
    required: false
    default: ''
    type: string
  ow_tag:
    description: 'OW tag'
    required: false
    default: ''
    type: string
  suffix:
    description: 'run-time artifact suffix'
    required: false
    default: ''
    type: string
  owdebug:
    description: 'verbosed/debug output for GH Actions scripts development'
    required: false
    default: ''
    type: string
  testmode:
    description: 'testing mode (no build)'
    required: false
    default: ''
    type: string
runs:
  using: composite
  steps:
  - if: inputs.ow_version == ''
    name: Load new OW
    uses: "./.github/actions/artfload"
    with:
      gitpath:    'rel'
      artifact:   "rel ${{ inputs.suffix }}"
      owdebug:    ${{ inputs.owdebug }}
      testmode:   ${{ inputs.testmode }}
  - if: inputs.ow_version == '' && runner.os == 'Linux'
    name: Setup test OW environment
    run: |
      if [ "${{ runner.arch }}" = "X64" ]; then
        echo "${{github.workspace}}/rel/binl" >> "$GITHUB_PATH"
        echo "WATCOM=${{github.workspace}}/rel" >> "$GITHUB_ENV"
        echo "INCLUDE=${{github.workspace}}/rel/lh" >> "$GITHUB_ENV"
      fi
      if [ "${{ runner.arch }}" = "ARM64" ]; then
        echo "${{github.workspace}}/rel/arm64" >> "$GITHUB_PATH"
        echo "WATCOM=${{github.workspace}}/rel" >> "$GITHUB_ENV"
        echo "INCLUDE=${{github.workspace}}/rel/lh" >> "$GITHUB_ENV"
      fi
    shell: bash
  - if: inputs.ow_version == '' && runner.os == 'Windows'
    name: Setup test OW environment
    run: |
      echo ${{github.workspace}}\rel\binnt>> "%GITHUB_PATH%"
      echo WATCOM=${{github.workspace}}\rel>> "%GITHUB_ENV%"
      echo INCLUDE=${{github.workspace}}\rel\h;${{github.workspace}}\rel\h\nt>> "%GITHUB_ENV%"
    shell: cmd
  - if: inputs.ow_version != ''
    name: Setup test OW environment
    uses: open-watcom/setup-watcom@v0
    with:
      version: ${{ inputs.ow_version }}
      tag:     ${{ inputs.ow_tag }}
  - if: runner.os == 'Linux'
    name: Test Bootstrap OW
    run: |
      if [ "${{ inputs.owdebug }}" = "1" ]; then
        env | sort
      fi
      if [ "${{ inputs.testmode }}" = "" ]; then
        ci/buildx.sh
      fi
    env:
      OWBUILD_STAGE: 'boot'
      OWTOOLS:       'WATCOM'
      OWROOT:        ${{ github.workspace }}
      OWDEBUG:       ${{ inputs.owdebug }}
      OWVERBOSE:     1
      TESTBOOT:      ${{ inputs.ow_version == '' && '1' || '' }}
    shell: bash
  - if: runner.os == 'Windows'
    name: Test Bootstrap OW
    run: |
      if "${{ inputs.owdebug }}" == "1" (
        set
      )
      if "${{ inputs.testmode }}" == "" (
        ci\buildx.cmd
      )
    env:
      OWBUILD_STAGE: 'boot'
      OWTOOLS:       'WATCOM'
      OWROOT:        ${{ github.workspace }}
      OWDEBUG:       ${{ inputs.owdebug }}
      OWVERBOSE:     1
      TESTBOOT:      ${{ inputs.ow_version == '' && '1' || '' }}
    shell: cmd
