name: artifact-save
description: 'Upload Artifact (tar file), first create it from git subdirectory'
inputs:
  gitpath:
    description: 'git subdirectory'
    required: true
    default: ''
    type: string
  artifact:
    description: 'artifact name, worlds separated by space, spaces are replased by dash characters (-)'
    required: false
    default: ''
    type: string
  noarchive:
    description: 'not use tar archive for artifact'
    required: false
    default: ''
    type: string
  retention_days:
    description: 'how many days artifact is preserved before deletion'
    required: false
    default: 3
    type: string
  owdebug:
    description: 'verbosed/debug output for GH Actions scripts development'
    required: false
    default: ''
    type: string
  testmode:
    description: 'testing mode (no build)'
    required: false
    default: ''
    type: string
runs:
  using: composite
  steps:
  - name: Get Artifact name
    id: artifact_name
    run: >
      -Split "${{ inputs.artifact }}"
      | Join-String -Separator '-' -OutputPrefix 'id='
      | Out-File -FilePath ${{ github.output }} -Encoding utf8 -Append
    shell: pwsh
  - if: inputs.noarchive == ''
    id: tarname
    run: >
      Join-Path ${{ github.workspace }} owartifact.tar.xz
      | Join-String -OutputPrefix 'fullname='
      | Out-File -FilePath ${{ github.output }} -Encoding utf8 -Append
    shell: pwsh
  - if: inputs.noarchive == ''
    uses: "./.github/actions/tarsave"
    with:
      gitpath:  ${{ inputs.gitpath }}
      fullname: ${{ steps.tarname.outputs.fullname }}
      owdebug:  ${{ inputs.owdebug }}
      testmode: ${{ inputs.testmode }}
  - name: Get source
    id: srcpath
    run: |
      if( '${{ inputs.noarchive }}' -eq '' ) {
        "${{ steps.tarname.outputs.fullname }}" | Join-String -OutputPrefix 'path=' | Out-File -FilePath ${{ github.output }} -Encoding utf8 -Append
      } else {
        Join-Path ${{ github.workspace }} ${{ inputs.gitpath }} | Join-String -OutputPrefix 'path=' | Out-File -FilePath ${{ github.output }} -Encoding utf8 -Append
      }
    shell: pwsh
  - if: inputs.testmode == ''
    name: Upload Artifact ${{ steps.artifact_name.outputs.id }}
    uses: actions/upload-artifact@v4
    with:
      name:             ${{ steps.artifact_name.outputs.id }}
      path:             ${{ steps.srcpath.outputs.path }}
      retention-days:   ${{ inputs.retention_days }}
      overwrite:        true
  - if: inputs.noarchive == ''
    name: Delete Temporary Artifact tar file
    run: rm -f ${{ steps.tarname.outputs.fullname }}
    shell: bash
